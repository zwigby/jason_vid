3.2.10 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode;0:@imported_file0;[ :@options{ :@imported_filename"shared:
@lineio:Sass::Tree::CommentNode
:
@type:silent;[ :@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;
@
;io:Sass::Tree::VariableNode:
@name" default-transition-property;[ :@guarded"!default;
@
:
@expro:Sass::Script::String	;:identifier;"all;
@
;i;io;;" default-transition-duration;[ ;"!default;
@
;o:Sass::Script::Number:@numerator_units["s;i;
@
:@original"1s;i:@denominator_units[ ;io;;" default-transition-function;[ ;"!default;
@
;o:Sass::Script::Bool;F;
@
;i;io;;"default-transition-delay;[ ;"!default;
@
;o;;F;
@
;i;io;;"#transitionable-prefixed-values;[ ;"!default;
@
;o:Sass::Script::List	;[o;	;;;"transform;
@
;io;	;;;"transform-origin;
@
;i;
@
;i:@separator:
comma;io;
;;;[ ;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;
@
;i!o:Sass::Tree::MixinDefNode;"transition-property;[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"string;@:
@linei1;i1:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@keywords{ ;i1:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"property_1;"property-1;@;i10[o:Sass::Tree::VariableNode;"property-1:@children[ :@guarded0;@:
@expro;;"unquote;@;{ ;i1;0;[o;	;"property_1;"property-1;@;i1;i1o;;"properties;[ ;0;
@
;o:Sass::Script::Funcall;"compact;
@
:@keywords{ ;i2:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"property_1;"property-1;
@
;i2o;%	;&"property_2;"property-2;
@
;i2o;%	;&"property_3;"property-3;
@
;i2o;%	;&"property_4;"property-4;
@
;i2o;%	;&"property_5;"property-5;
@
;i2o;%	;&"property_6;"property-6;
@
;i2o;%	;&"property_7;"property-7;
@
;i2o;%	;&"property_8;"property-8;
@
;i2o;%	;&"property_9;"property-9;
@
;i2o;%	;&"property_10;"property-10;
@
;i2;i2u; Å[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ :
@linei30[o:Sass::Tree::PropNode:
@tabsi ;[" -webkit-transition-property:@children[ :@valueo:Sass::Script::Funcall;"prefixed-for-transition;@	:@keywords{ ;	i3:@splat0:
@args[o:Sass::Script::String	:
@type:identifier;"-webkit;@	;	i3o; 	;"properties;"properties;@	;	i3;@	;	i3:@prop_syntax:newu; Á[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ :
@linei40[o:Sass::Tree::PropNode:
@tabsi ;["-moz-transition-property:@children[ :@valueo:Sass::Script::Funcall;"prefixed-for-transition;@	:@keywords{ ;	i4:@splat0:
@args[o:Sass::Script::String	:
@type:identifier;"	-moz;@	;	i4o; 	;"properties;"properties;@	;	i4;@	;	i4:@prop_syntax:newu; ¹[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ :
@linei50[o:Sass::Tree::PropNode:
@tabsi ;["-o-transition-property:@children[ :@valueo:Sass::Script::Funcall;"prefixed-for-transition;@	:@keywords{ ;	i5:@splat0:
@args[o:Sass::Script::String	:
@type:identifier;"-o;@	;	i5o; 	;"properties;"properties;@	;	i5;@	;	i5:@prop_syntax:newo:Sass::Tree::PropNode:
@tabsi ;["transition-property;[ ;o;%	;&"properties;"properties;
@
;i6;
@
;i6:@prop_syntax:new;
@
;i0:@has_childrenT;#0;$[[o;%;&"property_1;"property-1;
@
o;%	;&" default_transition_property;" default-transition-property;
@
;i&[o;%;&"property_2;"property-2;
@
o;;F;
@
;i'[o;%;&"property_3;"property-3;
@
o;;F;
@
;i([o;%;&"property_4;"property-4;
@
o;;F;
@
;i)[o;%;&"property_5;"property-5;
@
o;;F;
@
;i*[o;%;&"property_6;"property-6;
@
o;;F;
@
;i+[o;%;&"property_7;"property-7;
@
o;;F;
@
;i,[o;%;&"property_8;"property-8;
@
o;;F;
@
;i-[o;%;&"property_9;"property-9;
@
o;;F;
@
;i.[o;%;&"property_10;"property-10;
@
o;;F;
@
;i/o;
;;;[ ;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;
@
;i9o;;"transition-duration;[u; Ù[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"string;@:
@lineiI;iI:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@keywords{ ;iI:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"duration_1;"duration-1;@;iI0[o:Sass::Tree::VariableNode;"duration-1:@children[ :@guarded0;@:
@expro;;"unquote;@;{ ;iI;0;[o;	;"duration_1;"duration-1;@;iI;iIo;;"durations;[ ;0;
@
;o;!;"compact;
@
;"{ ;iJ;#0;$[o;%	;&"duration_1;"duration-1;
@
;iJo;%	;&"duration_2;"duration-2;
@
;iJo;%	;&"duration_3;"duration-3;
@
;iJo;%	;&"duration_4;"duration-4;
@
;iJo;%	;&"duration_5;"duration-5;
@
;iJo;%	;&"duration_6;"duration-6;
@
;iJo;%	;&"duration_7;"duration-7;
@
;iJo;%	;&"duration_8;"duration-8;
@
;iJo;%	;&"duration_9;"duration-9;
@
;iJo;%	;&"duration_10;"duration-10;
@
;iJ;iJo:Sass::Tree::MixinNode;"experimental;[ ;
@
;"{ ;iM;#0;$[o;	;;;"transition-duration;
@
;iKo;%	;&"durations;"durations;
@
;iKo;	;;;"	-moz;
@
;iLo;	;;;"-webkit;
@
;iLo;	;;;"-o;
@
;iLo:!Sass::Script::UnaryOperation	;
@
;iL:@operator:not:@operando;	;;;"-ms;
@
;iLo;-	;
@
;iL;.;/;0o;	;;;"-khtml;
@
;iLo;	;;;"official;
@
;iL;
@
;iH;+T;#0;$[[o;%;&"duration_1;"duration-1;
@
o;%	;&" default_transition_duration;" default-transition-duration;
@
;i>[o;%;&"duration_2;"duration-2;
@
o;;F;
@
;i?[o;%;&"duration_3;"duration-3;
@
o;;F;
@
;i@[o;%;&"duration_4;"duration-4;
@
o;;F;
@
;iA[o;%;&"duration_5;"duration-5;
@
o;;F;
@
;iB[o;%;&"duration_6;"duration-6;
@
o;;F;
@
;iC[o;%;&"duration_7;"duration-7;
@
o;;F;
@
;iD[o;%;&"duration_8;"duration-8;
@
o;;F;
@
;iE[o;%;&"duration_9;"duration-9;
@
o;;F;
@
;iF[o;%;&"duration_10;"duration-10;
@
o;;F;
@
;iGo;
;;;[ ;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;
@
;iPo;;"transition-timing-function;[o;;"function-1;[ ;0;
@
;o;!;"unquote;
@
;"{ ;ia;#0;$[o;%	;&"function_1;"function-1;
@
;ia;iao;;"functions;[ ;0;
@
;o;!;"compact;
@
;"{ ;ib;#0;$[o;%	;&"function_1;"function-1;
@
;ibo;%	;&"function_2;"function-2;
@
;ibo;%	;&"function_3;"function-3;
@
;ibo;%	;&"function_4;"function-4;
@
;ibo;%	;&"function_5;"function-5;
@
;ibo;%	;&"function_6;"function-6;
@
;ibo;%	;&"function_7;"function-7;
@
;ibo;%	;&"function_8;"function-8;
@
;ibo;%	;&"function_9;"function-9;
@
;ibo;%	;&"function_10;"function-10;
@
;ib;ibo;,;"experimental;[ ;
@
;"{ ;ie;#0;$[o;	;;;"transition-timing-function;
@
;ico;%	;&"functions;"functions;
@
;ico;	;;;"	-moz;
@
;ido;	;;;"-webkit;
@
;ido;	;;;"-o;
@
;ido;-	;
@
;id;.;/;0o;	;;;"-ms;
@
;ido;-	;
@
;id;.;/;0o;	;;;"-khtml;
@
;ido;	;;;"official;
@
;id;
@
;i`;+T;#0;$[[o;%;&"function_1;"function-1;
@
o;%	;&" default_transition_function;" default-transition-function;
@
;iV[o;%;&"function_2;"function-2;
@
o;;F;
@
;iW[o;%;&"function_3;"function-3;
@
o;;F;
@
;iX[o;%;&"function_4;"function-4;
@
o;;F;
@
;iY[o;%;&"function_5;"function-5;
@
o;;F;
@
;iZ[o;%;&"function_6;"function-6;
@
o;;F;
@
;i[[o;%;&"function_7;"function-7;
@
o;;F;
@
;i\[o;%;&"function_8;"function-8;
@
o;;F;
@
;i][o;%;&"function_9;"function-9;
@
o;;F;
@
;i^[o;%;&"function_10;"function-10;
@
o;;F;
@
;i_o;
;;;[ ;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;
@
;iho;;"transition-delay;[u; Ê[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"string;@:
@lineix;ix:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@keywords{ ;ix:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"delay_1;"delay-1;@;ix0[o:Sass::Tree::VariableNode;"delay-1:@children[ :@guarded0;@:
@expro;;"unquote;@;{ ;ix;0;[o;	;"delay_1;"delay-1;@;ix;ixo;;"delays;[ ;0;
@
;o;!;"compact;
@
;"{ ;iy;#0;$[o;%	;&"delay_1;"delay-1;
@
;iyo;%	;&"delay_2;"delay-2;
@
;iyo;%	;&"delay_3;"delay-3;
@
;iyo;%	;&"delay_4;"delay-4;
@
;iyo;%	;&"delay_5;"delay-5;
@
;iyo;%	;&"delay_6;"delay-6;
@
;iyo;%	;&"delay_7;"delay-7;
@
;iyo;%	;&"delay_8;"delay-8;
@
;iyo;%	;&"delay_9;"delay-9;
@
;iyo;%	;&"delay_10;"delay-10;
@
;iy;iyo;,;"experimental;[ ;
@
;"{ ;i|;#0;$[o;	;;;"transition-delay;
@
;izo;%	;&"delays;"delays;
@
;izo;	;;;"	-moz;
@
;i{o;	;;;"-webkit;
@
;i{o;	;;;"-o;
@
;i{o;-	;
@
;i{;.;/;0o;	;;;"-ms;
@
;i{o;-	;
@
;i{;.;/;0o;	;;;"-khtml;
@
;i{o;	;;;"official;
@
;i{;
@
;iw;+T;#0;$[[o;%;&"delay_1;"delay-1;
@
o;%	;&"default_transition_delay;"default-transition-delay;
@
;im[o;%;&"delay_2;"delay-2;
@
o;;F;
@
;in[o;%;&"delay_3;"delay-3;
@
o;;F;
@
;io[o;%;&"delay_4;"delay-4;
@
o;;F;
@
;ip[o;%;&"delay_5;"delay-5;
@
o;;F;
@
;iq[o;%;&"delay_6;"delay-6;
@
o;;F;
@
;ir[o;%;&"delay_7;"delay-7;
@
o;;F;
@
;is[o;%;&"delay_8;"delay-8;
@
o;;F;
@
;it[o;%;&"delay_9;"delay-9;
@
o;;F;
@
;iu[o;%;&"delay_10;"delay-10;
@
o;;F;
@
;ivo;
;;;[ ;["*/* Transition all-in-one shorthand */;
@
;io;;"single-transition;[o;,;"transition;[ ;
@
;"{ ;i;#0;$[o;!;"compact;
@
;"{ ;i;#0;$[o;	;[	o;%	;&"property;"property;
@
;io;%	;&"duration;"duration;
@
;io;%	;&"function;"function;
@
;io;%	;&"
delay;"
delay;
@
;i;
@
;i;:
space;
@
;i;+T;#0;$[	[o;%;&"property;"property;
@
o;%	;&" default_transition_property;" default-transition-property;
@
;i}[o;%;&"duration;"duration;
@
o;%	;&" default_transition_duration;" default-transition-duration;
@
;i~[o;%;&"function;"function;
@
o;%	;&" default_transition_function;" default-transition-function;
@
;i[o;%;&"
delay;"
delay;
@
o;%	;&"default_transition_delay;"default-transition-delay;
@
;io;;"transition;[u; ÷[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"default;@:
@linei;i:@operator:eq:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1:
@name"transition-1;@;i0[o:Sass::Tree::VariableNode;"transition-1:@children[ :@guarded0;@:
@expro:Sass::Script::Funcall;"compact;@:@keywords{ ;i:@splat0:
@args[o:Sass::Script::List	;[	o;	;" default_transition_property;" default-transition-property;@;io;	;" default_transition_duration;" default-transition-duration;@;io;	;" default_transition_function;" default-transition-function;@;io;	;"default_transition_delay;"default-transition-delay;@;i;@;i:@separator:
space;io;;"transitions;[ ;0;
@
;o;;F;
@
;i;iu; [o:Sass::Script::Operation
:@options{ :@operand2o; 
;@;o:Sass::Script::String	:
@type:identifier:@value"	list;@:
@linei;i:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@keywords{ ;i:@splat0:
@args[o;;"nth;@;{ ;i;0;[o:Sass::Script::Variable	:@underscored_name"transition_1;"transition-1;@;io:Sass::Script::Number:@numerator_units[ ;i;@:@original"1;i:@denominator_units[ ;i;:and;o; 
;@;o;	;	;
;"	list;@;i;i;;;o;;"type-of;@;{ ;i;0;[o;	;"transition_1;"transition-1;@;iu:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:
@name"transitions:@children[ :@guarded0:@options{ :
@expro:Sass::Script::Funcall;"compact;	@
:@keywords{ :
@linei:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;"transition-1;	@
;io;	;"transition_2;"transition-2;	@
;io;	;"transition_3;"transition-3;	@
;io;	;"transition_4;"transition-4;	@
;io;	;"transition_5;"transition-5;	@
;io;	;"transition_6;"transition-6;	@
;io;	;"transition_7;"transition-7;	@
;io;	;"transition_8;"transition-8;	@
;io;	;"transition_9;"transition-9;	@
;io;	;"transition_10;"transition-10;	@
;i;i[o:Sass::Tree::VariableNode;"transitions:@children[ :@guarded0;@:
@expro;;"	join;@;{ ;i;0;[o;	;"transition_1;"transition-1;@;io;;"compact;@;{ ;i;0;[o;	;"transition_2;"transition-2;@;io;	;"transition_3;"transition-3;@;io;	;"transition_4;"transition-4;@;io;	;"transition_5;"transition-5;@;io;	;"transition_6;"transition-6;@;io;	;"transition_7;"transition-7;@;io;	;"transition_8;"transition-8;@;io;	;"transition_9;"transition-9;@;io;	;"transition_10;"transition-10;@;io;	;	;
;"
comma;@;i;io;;"delays;[ ;0;
@
;o;!;"comma-list;
@
;"{ ;i;#0;$[ ;io;;"has-delays;[ ;0;
@
;o;;F;
@
;i;io;;"webkit-value;[ ;0;
@
;o;!;"comma-list;
@
;"{ ;i;#0;$[ ;io;;"moz-value;[ ;0;
@
;o;!;"comma-list;
@
;"{ ;i;#0;$[ ;io;;"o-value;[ ;0;
@
;o;!;"comma-list;
@
;"{ ;i;#0;$[ ;io;
;;;[ ;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;
@
;i o:Sass::Tree::EachNode:
@listo;%	;&"transitions;"transitions;
@
;i¢;[o;
;;;[ ;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;
@
;i£o;;"property;[ ;0;
@
;o;!;"nth;
@
;"{ ;i¥;#0;$[o;%	;&"transition;"transition;
@
;i¥o;;[ ;i;
@
;"1;i¥;[ ;i¥o;;"duration;[ ;0;
@
;o;;F;
@
;i¦;i¦o;;"timing-function;[ ;0;
@
;o;;F;
@
;i§;i§o;;"
delay;[ ;0;
@
;o;;F;
@
;i¨;i¨u; [o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::Number:@numerator_units[ :@valuei;@:@original"1:
@linei©:@denominator_units[ ;i©:@operator:gt:@operand1o:Sass::Script::Funcall:
@name"length;@:@keywords{ ;i©:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;@;i©0[o:Sass::Tree::VariableNode;"duration:@children[ :@guarded0;@:
@expro;;"nth;@;{ ;i©;0;[o;	;"transition;"transition;@;i©o;;	[ ;
i;@;"2;i©;@;i©u; [o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::Number:@numerator_units[ :@valuei;@:@original"2:
@lineiª:@denominator_units[ ;iª:@operator:gt:@operand1o:Sass::Script::Funcall:
@name"length;@:@keywords{ ;iª:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;@;iª0[o:Sass::Tree::VariableNode;"timing-function:@children[ :@guarded0;@:
@expro;;"nth;@;{ ;iª;0;[o;	;"transition;"transition;@;iªo;;	[ ;
i;@;"3;iª;@;iªu; Y[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::Number:@numerator_units[ :@valuei;@:@original"3:
@linei«:@denominator_units[ ;i«:@operator:gt:@operand1o:Sass::Script::Funcall:
@name"length;@:@keywords{ ;i«:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;@;i«0[o:Sass::Tree::VariableNode;"
delay:@children[ :@guarded0;@:
@expro;;"nth;@;{ ;i«;0;[o;	;"transition;"transition;@;i«o;;	[ ;
i	;@;"4;i«;@;i«o;;"has-delays;[ ;0;@;o:Sass::Script::Bool;
T;@;i«;i«o;
;;;[ ;[";/* If a delay is provided without a timing function */;
@
;i­u; g[o:Sass::Script::Operation
:@options{ :@operand2o:!Sass::Script::UnaryOperation	;@:
@linei®:@operator:not:@operando:Sass::Script::Variable	:@underscored_name"
delay:
@name"
delay;@;	i®;	i®;
:and:@operand1o:Sass::Script::Funcall;"is-time;@:@keywords{ ;	i®:@splat0:
@args[o;	;"timing_function;"timing-function;@;	i®0[o:Sass::Tree::VariableNode;"
delay:@children[ :@guarded0;@:
@expro;	;"timing_function;"timing-function;@;	i®;	i®o;;"timing-function;[ ;0;@;o:Sass::Script::Bool:@valueF;@;	i®;	i®o;;"has-delays;[ ;0;@;o;;T;@;	i®;	i®o;
;;;[ ;["9/* Keep a list of delays in case one is specified */;
@
;i°o;;"delays;[ ;0;
@
;o;!;"append;
@
;"{ ;i±;#0;$[o;%	;&"delays;"delays;
@
;i±o;!;"if;
@
;"{ ;i±;#0;$[o;%	;&"
delay;"
delay;
@
;i±o;%	;&"
delay;"
delay;
@
;i±o;;["s;i ;
@
;"0s;i±;[ ;i±o;;"webkit-value;[ ;0;
@
;o;!;"append;
@
;"{ ;i³;#0;$[o;%	;&"webkit_value;"webkit-value;
@
;i³o;!;"compact;
@
;"{ ;i³;#0;$[o;	;[o;!;"prefixed-for-transition;
@
;"{ ;i³;#0;$[o;	;;;"-webkit;
@
;i³o;%	;&"property;"property;
@
;i³o;%	;&"duration;"duration;
@
;i³o;%	;&"timing_function;"timing-function;
@
;i³;
@
;i³;;1;i³o;;"moz-value;[ ;0;
@
;o;!;"append;
@
;"{ ;i´;#0;$[o;%	;&"moz_value;"moz-value;
@
;i´o;!;"compact;
@
;"{ ;i´;#0;$[o;	;[	o;!;"prefixed-for-transition;
@
;"{ ;i´;#0;$[o;	;;;"	-moz;
@
;i´o;%	;&"property;"property;
@
;i´o;%	;&"duration;"duration;
@
;i´o;%	;&"timing_function;"timing-function;
@
;i´o;%	;&"
delay;"
delay;
@
;i´;
@
;i´;;1;i´o;;"o-value;[ ;0;
@
;o;!;"append;
@
;"{ ;iµ;#0;$[o;%	;&"o_value;"o-value;
@
;iµo;!;"compact;
@
;"{ ;iµ;#0;$[o;	;[	o;!;"prefixed-for-transition;
@
;"{ ;iµ;#0;$[o;	;;;"-o;
@
;iµo;%	;&"property;"property;
@
;iµo;%	;&"duration;"duration;
@
;iµo;%	;&"timing_function;"timing-function;
@
;iµo;%	;&"
delay;"
delay;
@
;iµ;
@
;iµ;;1;iµ;
@
;i¢:	@var"transition;+Tu; Ý[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ :
@linei¸0[o:Sass::Tree::PropNode:
@tabsi ;["-webkit-transition:@children[ :@valueo; 	;"webkit_value;"webkit-value;@	;	i¸;@	;	i¸:@prop_syntax:newo:Sass::Tree::CommentNode
:
@type:silent;[ ;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;@	;	i¹u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:
@name"has-delays:@options{ :
@lineiº0[o:Sass::Tree::PropNode:
@tabsi ;["-webkit-transition-delay:@children[ :@valueo; 	;"delays;"delays;@	;	iº;@	;	iº:@prop_syntax:newu; #[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ :
@linei»0[o:Sass::Tree::PropNode:
@tabsi ;["-moz-transition:@children[ :@valueo; 	;"moz_value;"moz-value;@	;	i»;@	;	i»:@prop_syntax:newu; [o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ :
@linei¼0[o:Sass::Tree::PropNode:
@tabsi ;["-o-transition:@children[ :@valueo; 	;"o_value;"o-value;@	;	i¼;@	;	i¼:@prop_syntax:newo;';(i ;["transition;[ ;o;%	;&"transitions;"transitions;
@
;i½;
@
;i½;);*;
@
;i;+T;#0;$[[o;%;&"transition_1;"transition-1;
@
o;	;;;"default;
@
;i[o;%;&"transition_2;"transition-2;
@
o;;F;
@
;i[o;%;&"transition_3;"transition-3;
@
o;;F;
@
;i[o;%;&"transition_4;"transition-4;
@
o;;F;
@
;i[o;%;&"transition_5;"transition-5;
@
o;;F;
@
;i[o;%;&"transition_6;"transition-6;
@
o;;F;
@
;i[o;%;&"transition_7;"transition-7;
@
o;;F;
@
;i[o;%;&"transition_8;"transition-8;
@
o;;F;
@
;i[o;%;&"transition_9;"transition-9;
@
o;;F;
@
;i[o;%;&"transition_10;"transition-10;
@
o;;F;
@
;io;
;;;[ ;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;
@
;iÀo:Sass::Tree::FunctionNode;"comma-list;[o:Sass::Tree::ReturnNode	;[ ;
@
;o;!;"	join;
@
;"{ ;iÂ;#0;$[o;	;[ ;
@
;iÂ;;1o;%	;&"	list;"	list;
@
;iÂo;	;;;"
comma;
@
;iÂ;iÂ;
@
;iÁ;+T;#0;$[[o;%;&"	list;"	list;
@
o;	;[ ;
@
;iÁ;;1o;
;;;[ ;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;
@
;iÅo;5;"prefixed-for-transition;[u; ®[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"	list;@:
@lineiÇ;iÇ:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@keywords{ ;iÇ:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"property;"property;@;iÇu:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:
@name"
index:@options{ :@keywords{ :
@lineiÎ:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values;"#transitionable-prefixed-values;@;	iÎo;	;"property;"property;@;	iÎu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:@children[ :@options{ :
@expro:Sass::Script::Variable	:@underscored_name"property:
@name"property;@	:
@lineiÑ;iÑ[o:Sass::Tree::ReturnNode	:@children[ ;@:
@expro: Sass::Script::Interpolation:@whitespace_beforei:@aftero;;0;0;@:@originally_textF;	iÏ:	@mido;	;"property;"property;@;	iÏ:@whitespace_after0:@beforeo;;0;0;@;:originally_text;	iÏ;o:Sass::Script::String	:
@type:identifier:@value"-;@;	iÏ;F;0;@;F;	iÏ;o;	;"prefix;"prefix;@;	iÏ;0;0;	iÏ[o:Sass::Tree::VariableNode;"new-list:@children[ :@guarded0;@:
@expro;;"comma-list;@;{ ;iÈ;0;[ ;iÈo:Sass::Tree::EachNode:
@listo;	;"property;"property;@;iÉ;[o;;"new-list;[ ;0;@;o;;"append;@;{ ;iÊ;0;[o;	;"new_list;"new-list;@;iÊo;;"prefixed-for-transition;@;{ ;iÊ;0;[o;	;"prefix;"prefix;@;iÊo;	;"v;"v;@;iÊ;iÊ;@;iÉ:	@var"v:@has_childrenTo:Sass::Tree::ReturnNode	;[ ;@;o;	;"new_list;"new-list;@;iÌ;iÌ;
@
;iÆ;+T;#0;$[[o;%;&"prefix;"prefix;
@
0[o;%;&"property;"property;
@
0o;
;;;[ ;["7/* Checks if the value given is a unit of time. */;
@
;iÖo;5;"is-time;[u; [o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"number;@:
@lineiØ;iØ:@operator:eq:@operand1o:Sass::Script::Funcall:
@name"type-of;@:@keywords{ ;iØ:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"
value;"
value;@;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:@children[ :@options{ :
@expro:Sass::Script::Bool:@valueF;@	:
@lineiÛ;iÛ[o:Sass::Tree::ReturnNode	:@children[ ;@:
@expro:!Sass::Script::UnaryOperation	;@;iÙ;:not:@operando;	;@;iÙ;;;o;;"
index;@;{ ;iÙ;0;[o:Sass::Script::List	;[o;	;	;
;"s;@;iÙo;	;	;
;"ms;@;iÙ;@;iÙ:@separator:
spaceo;;"	unit;@;{ ;iÙ;0;[o;	;"
value;"
value;@;iÙ;iÙ;
@
;i×;+T;#0;$[[o;%;&"
value;"
value;
@
0;
@
;i;+T